{"version":3,"file":"static/js/editmovie.de41a4d5.chunk.js","mappings":"wJACA,MAA2B,yBAA3B,EAA2D,qBAA3D,EAAgG,8BAAhG,EAAwI,wBAAxI,EAA6N,uB,0BCItN,SAASA,EAAT,GAAqF,IAAjEC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,+BAAgCC,EAAsB,EAAtBA,mBAgBnE,OACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEC,GAAE,sBAAiBL,EAASM,IAC5BC,MAAO,CAAEC,eAAgB,QAF3B,UAIE,6BAAQ,SAAC,MAAD,CAAOC,KAAK,gBAEtB,mBAAQC,QAAS,kBAtBDJ,EAsBoBN,EAASM,GArBjDL,EAA+BK,QAC/BK,QAAQC,IAAI,iBAAkBN,GAFX,IAACA,GAsBhB,UAAkD,SAAC,MAAD,CAAUG,KAAK,iBAInE,iBAAKN,UAAWC,EAAhB,WACE,+BAAKJ,QAAL,IAAKA,OAAL,EAAKA,EAAUa,SACf,oCAAKb,QAAL,IAAKA,OAAL,EAAKA,EAAUc,KAAf,WAEF,gBAAKX,UAAWC,EAAgBM,QAAS,kBAtB5B,SAACV,GAChBW,QAAQC,IAAI,kCAAmCZ,GAC/CE,EAAmBF,GAoB8Be,CAASf,IAAxD,UACE,gBAAKgB,IAAG,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAUiB,OAAQC,IAAG,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAAUa,WAK7C,gBAAKV,UAAWC,EAAhB,UACE,wBACGJ,EAASmB,QACRnB,EAASmB,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAiBD,GAARC,YAzBjBtB,EAASM,M,4FCrBnD,EAAuB,qB,oCCIhB,SAASiB,EAAT,GAAgF,IAA/DC,EAA8D,EAA9DA,iBAAkBC,EAA4C,EAA5CA,+BAAgCC,EAAY,EAAZA,SACxE,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KACA,GAAwBD,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAae,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeW,EAAf,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAec,EAAf,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAIMC,GADWC,EAAAA,EAAAA,IAAY,IACJC,SAASC,MAAM,KAAKC,UAAU,GAGjDC,EAAoB,SAACpB,GAAD,OAAYA,EAAOkB,MAAM,MAE7CG,EAAW,mCAAG,WAAOC,GAAP,oEAClBA,EAAEC,iBACF/B,QAAQC,IAAI,wBAAsB,CAChCC,MAAAA,EACAC,KAAAA,EACAK,OAAQoB,EAAkBpB,GAC1BF,OAAAA,EACAe,YAAAA,IAGe,aAAbN,EAVc,iCAWViB,EAAAA,EAAAA,IAAS,CACb9B,MAAAA,EACAC,KAAAA,EACAK,OAAQoB,EAAkBpB,GAC1BF,OAAAA,EACAe,YAAAA,IAhBc,OAkBhBR,IAlBgB,yCAqBVoB,EAAAA,EAAAA,IAAIV,EAAS,CACjBrB,MAAAA,EACAC,KAAAA,EACAK,OAAQoB,EAAkBpB,GAC1BF,OAAAA,EACAe,YAAAA,IA1Bc,QA6BhBP,IA7BgB,4CAAH,sDAiCjB,OACE,gBAAKtB,UAAWC,EAAhB,UACE,kBAAMyC,SAAUL,EAAhB,WACE,kBACEM,MAAOjC,EACPkC,SAAU,SAACN,GAAD,OAAOb,EAASa,EAAEO,OAAOF,QACnCG,KAAK,OACL3C,GAAG,QACH4C,KAAK,QACLC,YAAY,cACZC,UAAQ,KAGV,kBACEN,MAAO7B,EACP8B,SAAU,SAACN,GAAD,OAAOV,EAAUU,EAAEO,OAAOF,QACpCG,KAAK,OACL3C,GAAG,SACH4C,KAAK,SACLC,YAAY,SACZC,UAAQ,KAGV,kBACEN,MAAOhC,EACPiC,SAAU,SAACN,GAAD,OAAOZ,EAAQY,EAAEO,OAAOF,QAClCG,KAAK,OACL3C,GAAG,OACH4C,KAAK,OACLC,YAAY,OACZC,UAAQ,KAGV,kBACEN,MAAOd,EACPe,SAAU,SAACN,GAAD,OAAOR,EAAeQ,EAAEO,OAAOF,QACzCG,KAAK,OACL3C,GAAG,cACH4C,KAAK,cACLC,YAAY,cACZE,UAAU,MACVD,UAAQ,KAGV,kBACEN,MAAO3B,EACP4B,SAAU,SAACN,GAAD,OAAOX,EAAUW,EAAEO,OAAOF,QACpCG,KAAK,OACL3C,GAAG,QACH4C,KAAK,QACLC,YAAY,SACZE,UAAU,KACVD,UAAQ,KAGV,kBAAOH,KAAK,SAASH,MAAM,oB,8EC1GnC,EAA4B,yBAA5B,EAAwG,6B,sDC+CxG,EAxCkB,SAAC,GAAyD,EAAvDQ,UAAwD,IAA7CC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,kBAE9CC,GAAWtB,EAAAA,EAAAA,MACTuB,GAAWC,EAAAA,EAAAA,MAEjB,GAAkChC,EAAAA,EAAAA,UAAS,IAA3C,eAAOiC,EAAP,KAAkBC,EAAlB,KACM3B,EAAUuB,EAASrB,SAASC,MAAM,KAAKC,UAAU,IAEvDwB,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAU7B,GAAS8B,MAAK,SAACC,GAAD,OAAUJ,EAAaI,QAC9C,CAAC/B,IAWJ,OACE,+BAME,iBAAK/B,UAAWI,EAAhB,UACGI,QAAQC,IAAIgD,IACb,SAAC7D,EAAA,EAAD,CAAUC,SAAU4D,KACpB,iBAAKzD,UAAWI,EAAhB,WACE,yDACA,SAACgB,EAAA2C,EAAD,CAAOX,mBAAoBA,EAAoB9B,+BArBlC,WACnBd,QAAQC,IAAI,+DACZ4C,EAAkB,CAChBW,SAAS,EACTC,QAAS,kCAEXV,EAAS,MAe0FhC,SAAS","sources":["webpack://movies_app_react/./src/components/CardItem/styles.module.scss?af11","components/CardItem/index.jsx","webpack://movies_app_react/./src/components/Input/styles.module.scss?22bd","components/Input/index.jsx","webpack://movies_app_react/./src/pages/EditMovie/style.module.scss?025e","pages/EditMovie/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Carditem\":\"styles_Carditem__GtNwi\",\"Btns\":\"styles_Btns__LdWly\",\"TitleYearFilm\":\"styles_TitleYearFilm__ymwuj\",\"ImgFilm\":\"styles_ImgFilm__x-8b0\",\"DescriptionTitle\":\"styles_DescriptionTitle__Hug5F\",\"Genres\":\"styles_Genres__uRX6X\"};","import styles from \"./styles.module.scss\";\n// import { delMovie } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport { TiDelete, TiCog } from \"react-icons/ti\";\n\nexport function CardItem({ cardData, sonoincarditemelodicoacardlist, viewCardincardlist }) {\n  // console.log('---->', cardData);\n\n  const handleDelete = (id) => {\n    sonoincarditemelodicoacardlist(id);\n    console.log('id della carta', id);\n    // delMovie(id).then(() => {\n    //   window.location.reload(false);\n    // });\n  };\n\n  const viewCard = (cardData) => {\n    console.log('sei dentro la tua futura modale', cardData);\n    viewCardincardlist(cardData);\n  }\n\n  return (\n    <div className={styles.Carditem} key={cardData.id}>\n      <div className={styles.Btns}>        \n        <Link\n          to={`/edit-movie/${cardData.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <button><TiCog size=\"1.5rem\"/></button>\n        </Link>\n        <button onClick={() => handleDelete(cardData.id)}><TiDelete size=\"1.5rem\"/></button>\n      </div>\n        \n\n      <div className={styles.TitleYearFilm}>\n        <h2>{cardData?.title}</h2>\n        <p>({cardData?.year})</p>\n      </div>\n      <div className={styles.ImgFilm} onClick={() => viewCard(cardData)}>\n        <img src={cardData?.poster} alt={cardData?.title}></img>\n      </div>\n      {/* <div className={styles.DescriptionTitle}>\n        <p>{cardData?.description}</p>\n      </div> */}\n      <div className={styles.Genres}>\n        <ul>\n          {cardData.genres &&\n            cardData.genres.map((genre, index) => <li key={index}>{genre}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"styles_Form__YcJeC\"};","import styles from \"./styles.module.scss\";\nimport { useState } from \"react\";\nimport { addMovie, PUT } from \"../../utils\";\nimport { useLocation} from \"react-router-dom\";\n\nexport function Input({ completeCallback, dicoadAddMoviechehofattounaput, callType }) {\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n\n  const location = useLocation('');\n  const movieId = location.pathname.split('/').reverse()[0];\n\n\n  const unStringifyGenres = (genres) => genres.split(\",\");\n\n  const addNewMovie = async (e) => {\n    e.preventDefault();\n    console.log(\"-->>>>POST TUO QUI\", {\n      title,\n      year,\n      genres: unStringifyGenres(genres),\n      poster,\n      description,\n    });\n\n    if (callType === \"addMovie\") {\n      await addMovie({\n        title,\n        year,\n        genres: unStringifyGenres(genres),\n        poster,\n        description,\n      });\n      completeCallback();\n\n    } else {\n      await PUT(movieId, {\n        title,\n        year,\n        genres: unStringifyGenres(genres),\n        poster,\n        description,\n      });\n\n      dicoadAddMoviechehofattounaput();\n    }\n  };\n\n  return (\n    <div className={styles.Form}>\n      <form onSubmit={addNewMovie}>\n        <input\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"titolo film\"\n          required\n        />\n\n        <input\n          value={poster}\n          onChange={(e) => setPoster(e.target.value)}\n          type=\"text\"\n          id=\"poster\"\n          name=\"poster\"\n          placeholder=\"poster\"\n          required\n        />\n\n        <input\n          value={year}\n          onChange={(e) => setYear(e.target.value)}\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          placeholder=\"year\"\n          required\n        />\n\n        <input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"description\"\n          maxLength=\"165\"\n          required\n        />\n\n        <input\n          value={genres}\n          onChange={(e) => setGenres(e.target.value)}\n          type=\"text\"\n          id=\"genre\"\n          name=\"genre\"\n          placeholder=\"genere\"\n          maxLength=\"62\"\n          required\n        />\n\n        <input type=\"submit\" value=\"Conferma\" />\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"EditMovie\":\"style_EditMovie__-Pt6G\",\"CardItem\":\"style_CardItem__sN-vr\",\"ModifySection\":\"style_ModifySection__Ssjog\"};","import style from \"./style.module.scss\";\nimport { Input } from \"../../components/Input\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovies } from \"../../utils\";\nimport { CardItem } from \"../../components/CardItem\";\n// import { Modal } from \"../../components/Modal\";\n\nconst EditMovie = ({ isVisible, setModalVisibility, speaktoalertstate }) => {\n\n  let location = useLocation();\n  const navigate = useNavigate();\n    \n  const [movieData, setMovieData] = useState({});\n  const movieId = location.pathname.split(\"/\").reverse()[0];\n\n  useEffect(() => {\n    getMovies(movieId).then((data) => setMovieData(data));\n  }, [movieId]);\n\n  const facciounaPut = () => {\n    console.log(\"hai fatto una put, ssei su editmovie, vai a parlare con app\");\n    speaktoalertstate({\n      visible: true,\n      content: \"La Card è stata modificata\",\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      {/* <Modal\n        isVisible={true}\n        text=\"Fantastico! La tua Card è stata modificata! Torna alla Home\"\n      /> */}\n\n      <div className={style.EditMovie}>\n        {console.log(movieData)}\n        <CardItem cardData={movieData} />\n        <div className={style.ModifySection}>\n          <h2>Modifica i campi della card</h2>\n          <Input setModalVisibility={setModalVisibility} dicoadAddMoviechehofattounaput={facciounaPut} callType=\"PUT\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie"],"names":["CardItem","cardData","sonoincarditemelodicoacardlist","viewCardincardlist","className","styles","to","id","style","textDecoration","size","onClick","console","log","title","year","viewCard","src","poster","alt","genres","map","genre","index","Input","completeCallback","dicoadAddMoviechehofattounaput","callType","useState","setTitle","setYear","setGenres","setPoster","description","setDescription","movieId","useLocation","pathname","split","reverse","unStringifyGenres","addNewMovie","e","preventDefault","addMovie","PUT","onSubmit","value","onChange","target","type","name","placeholder","required","maxLength","isVisible","setModalVisibility","speaktoalertstate","location","navigate","useNavigate","movieData","setMovieData","useEffect","getMovies","then","data","I","visible","content"],"sourceRoot":""}