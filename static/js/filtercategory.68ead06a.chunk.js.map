{"version":3,"file":"static/js/filtercategory.68ead06a.chunk.js","mappings":"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","sources":["webpack://movies_app_react/./src/components/CardItem/styles.module.scss?af11","components/CardItem/index.jsx","webpack://movies_app_react/./src/components/CardList/styles.module.scss?6b93","components/CardList/index.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://movies_app_react/./src/pages/FilterCategory/styles.module.scss?fd74","pages/FilterCategory/index.jsx","utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Carditem\":\"styles_Carditem__GtNwi\",\"Btns\":\"styles_Btns__LdWly\",\"TitleYearFilm\":\"styles_TitleYearFilm__ymwuj\",\"ImgFilm\":\"styles_ImgFilm__x-8b0\",\"DescriptionTitle\":\"styles_DescriptionTitle__Hug5F\",\"Genres\":\"styles_Genres__uRX6X\"};","import styles from \"./styles.module.scss\";\nimport { delMovie } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\n\nexport function CardItem({ cardData }) {\n  // console.log('---->', cardData);\n\n  const handleDelete = (id) => {\n    delMovie(id).then(() => {\n      window.location.reload(false);\n    });\n  };\n\n  return (\n    <div className={styles.Carditem} key={cardData.id}>\n      <div className={styles.Btns}>        \n        <Link\n          to={`/edit-movie/${cardData.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <button>✏️</button>\n        </Link>\n        <button onClick={() => handleDelete(cardData.id)}>✖️</button>\n      </div>\n        \n\n      <div className={styles.TitleYearFilm}>\n        <h2>{cardData?.title}</h2>\n        <p>({cardData?.year})</p>\n      </div>\n      <div className={styles.ImgFilm}>\n        <img src={cardData?.poster} alt={cardData?.title}></img>\n      </div>\n      <div className={styles.DescriptionTitle}>\n        <p>{cardData?.description}</p>\n      </div>\n      <div className={styles.Genres}>\n        <ul>\n          {cardData.genres &&\n            cardData.genres.map((genre, index) => <li key={index}>{genre}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n}\n//\n\n//MODO ALTERNATIVO DI CONTROLLARE SE I GENERI CI SONO E SE CI SONO VANNO MAPPATI\n//                    {\n//     cardData?.genres?.map((genre, index) =>\n//         (<li key={index}>{genre}</li>))\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"Cardlist\":\"styles_Cardlist__HnfPI\"};","import styles from \"./styles.module.scss\";\nimport { useState, useEffect } from \"react\";\nimport { CardItem } from \"../CardItem\";\nimport { getMovies } from \"../../utils\";\n\nexport default function CardList({ searchInput }) {\n  const [moviesData, setMoviesData] = useState([]);\n\n  useEffect(() => {\n    getMovies().then((data) => setMoviesData(data));\n  }, []);\n\n  return (\n    <div className={styles.Cardlist}>\n      {moviesData.length &&\n        moviesData\n        .filter((movie) =>\n          movie.title\n            .trim()\n            .toLowerCase()\n            .includes(\n              searchInput.trim().toLowerCase()) \n              ||\n                movie.genres\n                  .toString()\n                  .trim()\n                  .toLowerCase()\n                  .includes(searchInput.trim().toLowerCase())\n            )\n            .map((movie) => <CardItem cardData={movie} key={movie.id} />)\n        \n        }\n    </div>\n  );\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"Allcategories\":\"styles_Allcategories__yV02L\"};","import styles from \"./styles.module.scss\";\nimport CardList from \"../../components/CardList\";\nimport { useState } from \"react\";\n\nfunction FilterCategory() {\n  const [category, setCategory] = useState([]);\n  // const [isActive, setActive] = useState();\n\n  const selectedCategory = (event) => {\n    setCategory([...category, event.target.value]);\n    console.log(event.target.value);\n    \n  };\n\n  return (\n    <>\n      <div className={styles.title}>\n        <h2>Scegli film per categoria</h2>\n      </div>\n      <div className={styles.Allcategories}>\n        <button\n          className={styles.btn_category}\n          onClick={selectedCategory}\n          value=\"Sci-fi\"\n        >\n          Sci-fi\n        </button>\n        <button\n          className={styles.btn_category}\n          onClick={selectedCategory}\n          value=\"Azione\"\n        >\n          Azione\n        </button>\n        <button\n          className={styles.btn_category}\n          onClick={selectedCategory}\n          value=\"Avventura\"\n        >\n          Avventura\n        </button>\n      </div>\n      <CardList searchInput={category.toString()} />\n    </>\n  );\n}\n\nexport default FilterCategory","// \"https://edgemony-backend.herokuapp.com/movies\"\n\n// Sulla base della lezione del giorno:\n\n// Creare un file utils.js, all'interno della directory src che:\n\n// includa una funzione per il metodo GET per l'indirizzo https://edgemony-backend.herokuapp.com/movies\n\n// sostituire il fetch al componente <CardList /> con la nuova funzione creata in utils\n\n// includa una funzione per il metodo POST, per l'aggiunta di nuovi movies all'array\n\n// includa una funzione per il metodo DELETE, per la rimozione di un determnato movie\n\n// includa una funzione per il metodo PUT, per modificare un determinato movie\n\nexport async function getMovies(id = \"\") {\n\n    const response = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`)\n    const res = await response.json();\n    console.log(response, res);\n    \n    return res;\n}\n\nexport const delMovie = async (id) => {\n    const del = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`, {\n        method: 'DELETE' , \n        headers: {\"content-type\" : \"application/JSON\"},\n    })\n\n    const data = await del.json();\n    return data;\n}\n\nexport const addMovie = async (body) => {\n    await fetch(\"https://edgemony-backend.herokuapp.com/movies\", {\n        method: 'POST' , \n        headers: {\"content-type\" : \"application/JSON\"},\n        body: JSON.stringify(body)\n        \n    })\n}\n//--------------------\nconst BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\n\n// const GET = () => fetch(BASE_URL).then((res) => res.json);\n\n//POST\n// const POST = (body) => \n//     fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: {\n//         \"Content-type\" : \"application/json\",\n//     },\n//     body: JSON.stringify(body),\n// });\n\n//PUT\n\nexport const PUT = (id,body) =>\n    fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n        \"Content-type\" : \"application/json\"\n    },\n    body: JSON.stringify(body),\n});\n\n// export { POST, PUT}"],"names":["CardItem","cardData","className","styles","to","id","style","textDecoration","onClick","delMovie","then","window","location","reload","title","year","src","poster","alt","description","genres","map","genre","index","CardList","searchInput","useState","moviesData","setMoviesData","useEffect","getMovies","data","length","filter","movie","trim","toLowerCase","includes","toString","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","category","setCategory","selectedCategory","event","target","value","console","log","fetch","response","json","res","method","headers","del","addMovie","body","JSON","stringify","PUT"],"sourceRoot":""}