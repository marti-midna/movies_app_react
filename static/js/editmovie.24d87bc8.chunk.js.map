{"version":3,"file":"static/js/editmovie.24d87bc8.chunk.js","mappings":"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","sources":["webpack://movies_app_react/./src/components/CardItem/styles.module.scss?af11","components/CardItem/index.jsx","webpack://movies_app_react/./src/components/Input/styles.module.scss?22bd","components/Input/index.jsx","webpack://movies_app_react/./src/pages/EditMovie/style.module.scss?025e","pages/EditMovie/index.jsx","utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Carditem\":\"styles_Carditem__GtNwi\",\"Btns\":\"styles_Btns__LdWly\",\"TitleYearFilm\":\"styles_TitleYearFilm__ymwuj\",\"ImgFilm\":\"styles_ImgFilm__x-8b0\",\"DescriptionTitle\":\"styles_DescriptionTitle__Hug5F\",\"Genres\":\"styles_Genres__uRX6X\"};","import styles from \"./styles.module.scss\";\nimport { delMovie } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\n\nexport function CardItem({ cardData }) {\n  // console.log('---->', cardData);\n\n  const handleDelete = (id) => {\n    delMovie(id).then(() => {\n      window.location.reload(false);\n    });\n  };\n\n  return (\n    <div className={styles.Carditem} key={cardData.id}>\n      <div className={styles.Btns}>        \n        <Link\n          to={`/edit-movie/${cardData.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <button>✏️</button>\n        </Link>\n        <button onClick={() => handleDelete(cardData.id)}>✖️</button>\n      </div>\n        \n\n      <div className={styles.TitleYearFilm}>\n        <h2>{cardData?.title}</h2>\n        <p>({cardData?.year})</p>\n      </div>\n      <div className={styles.ImgFilm}>\n        <img src={cardData?.poster} alt={cardData?.title}></img>\n      </div>\n      <div className={styles.DescriptionTitle}>\n        <p>{cardData?.description}</p>\n      </div>\n      <div className={styles.Genres}>\n        <ul>\n          {cardData.genres &&\n            cardData.genres.map((genre, index) => <li key={index}>{genre}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n}\n//\n\n//MODO ALTERNATIVO DI CONTROLLARE SE I GENERI CI SONO E SE CI SONO VANNO MAPPATI\n//                    {\n//     cardData?.genres?.map((genre, index) =>\n//         (<li key={index}>{genre}</li>))\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"styles_Form__YcJeC\"};","import styles from \"./styles.module.scss\";\nimport { useState } from \"react\";\nimport { addMovie, PUT } from \"../../utils\";\nimport { useLocation} from \"react-router-dom\";\n\nexport function Input({ completeCallback, dicoadAddMoviechehofattounaput, callType }) {\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n\n  const location = useLocation('');\n  const movieId = location.pathname.split('/').reverse()[0];\n\n\n  const unStringifyGenres = (genres) => genres.split(\",\");\n\n  const addNewMovie = async (e) => {\n    e.preventDefault();\n    console.log(\"-->>>>POST TUO QUI\", {\n      title,\n      year,\n      genres: unStringifyGenres(genres),\n      poster,\n      description,\n    });\n\n    if (callType === \"addMovie\") {\n      await addMovie({\n        title,\n        year,\n        genres: unStringifyGenres(genres),\n        poster,\n        description,\n      });\n      completeCallback();\n\n    } else {\n      await PUT(movieId, {\n        title,\n        year,\n        genres: unStringifyGenres(genres),\n        poster,\n        description,\n      });\n\n      dicoadAddMoviechehofattounaput();\n    }\n  };\n\n  return (\n    <div className={styles.Form}>\n      <form onSubmit={addNewMovie}>\n        <input\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"titolo film\"\n          required\n        />\n\n        <input\n          value={poster}\n          onChange={(e) => setPoster(e.target.value)}\n          type=\"text\"\n          id=\"poster\"\n          name=\"poster\"\n          placeholder=\"poster\"\n          required\n        />\n\n        <input\n          value={year}\n          onChange={(e) => setYear(e.target.value)}\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          placeholder=\"year\"\n          required\n        />\n\n        <input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"description\"\n          maxLength=\"165\"\n          required\n        />\n\n        <input\n          value={genres}\n          onChange={(e) => setGenres(e.target.value)}\n          type=\"text\"\n          id=\"genre\"\n          name=\"genre\"\n          placeholder=\"genere\"\n          maxLength=\"62\"\n          required\n        />\n\n        <input type=\"submit\" value=\"Conferma\" />\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"EditMovie\":\"style_EditMovie__-Pt6G\",\"ModifySection\":\"style_ModifySection__Ssjog\"};","import style from \"./style.module.scss\";\nimport { Input } from \"../../components/Input\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovies } from \"../../utils\";\nimport { CardItem } from \"../../components/CardItem\";\n// import { Modal } from \"../../components/Modal\";\n\nconst EditMovie = ({ isVisible, setModalVisibility, speaktoalertstate }) => {\n\n  let location = useLocation();\n  const navigate = useNavigate();\n    \n  const [movieData, setMovieData] = useState({});\n  const movieId = location.pathname.split(\"/\").reverse()[0];\n\n  useEffect(() => {\n    getMovies(movieId).then((data) => setMovieData(data));\n  }, [movieId]);\n\n  const facciounaPut = () => {\n    console.log(\"hai fatto una put, ssei su editmovie, vai a parlare con app\");\n    speaktoalertstate({\n      visible: true,\n      content: \"La Card è stata modificata\",\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      {/* <Modal\n        isVisible={true}\n        text=\"Fantastico! La tua Card è stata modificata! Torna alla Home\"\n      /> */}\n\n      <div className={style.EditMovie}>\n        {console.log(movieData)}\n        <CardItem cardData={movieData} />\n        <div className={style.ModifySection}>\n          <h2>Modifica i campi della card</h2>\n          <Input setModalVisibility={setModalVisibility} dicoadAddMoviechehofattounaput={facciounaPut} callType=\"PUT\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie","// \"https://edgemony-backend.herokuapp.com/movies\"\n\n// Sulla base della lezione del giorno:\n\n// Creare un file utils.js, all'interno della directory src che:\n\n// includa una funzione per il metodo GET per l'indirizzo https://edgemony-backend.herokuapp.com/movies\n\n// sostituire il fetch al componente <CardList /> con la nuova funzione creata in utils\n\n// includa una funzione per il metodo POST, per l'aggiunta di nuovi movies all'array\n\n// includa una funzione per il metodo DELETE, per la rimozione di un determnato movie\n\n// includa una funzione per il metodo PUT, per modificare un determinato movie\n\nexport async function getMovies(id = \"\") {\n\n    const response = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`)\n    const res = await response.json();\n    console.log(response, res);\n    \n    return res;\n}\n\nexport const delMovie = async (id) => {\n    const del = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`, {\n        method: 'DELETE' , \n        headers: {\"content-type\" : \"application/JSON\"},\n    })\n\n    const data = await del.json();\n    return data;\n}\n\nexport const addMovie = async (body) => {\n    await fetch(\"https://edgemony-backend.herokuapp.com/movies\", {\n        method: 'POST' , \n        headers: {\"content-type\" : \"application/JSON\"},\n        body: JSON.stringify(body)\n        \n    })\n}\n//--------------------\nconst BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\n\n// const GET = () => fetch(BASE_URL).then((res) => res.json);\n\n//POST\n// const POST = (body) => \n//     fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: {\n//         \"Content-type\" : \"application/json\",\n//     },\n//     body: JSON.stringify(body),\n// });\n\n//PUT\n\nexport const PUT = (id,body) =>\n    fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n        \"Content-type\" : \"application/json\"\n    },\n    body: JSON.stringify(body),\n});\n\n// export { POST, PUT}"],"names":["CardItem","cardData","className","styles","to","id","style","textDecoration","onClick","delMovie","then","window","location","reload","title","year","src","poster","alt","description","genres","map","genre","index","Input","completeCallback","dicoadAddMoviechehofattounaput","callType","useState","setTitle","setYear","setGenres","setPoster","setDescription","movieId","useLocation","pathname","split","reverse","unStringifyGenres","addNewMovie","e","preventDefault","console","log","addMovie","PUT","onSubmit","value","onChange","target","type","name","placeholder","required","maxLength","isVisible","setModalVisibility","speaktoalertstate","navigate","useNavigate","movieData","setMovieData","useEffect","getMovies","data","I","visible","content","fetch","response","json","res","method","headers","del","body","JSON","stringify"],"sourceRoot":""}