{"version":3,"file":"static/js/addmovie.02c14f5f.chunk.js","mappings":"gMACA,EAAuB,qB,oCCIhB,SAASA,EAAT,GAAgF,IAA/DC,EAA8D,EAA9DA,iBAAkBC,EAA4C,EAA5CA,+BAAgCC,EAAY,EAAZA,SACxE,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAsCR,EAAAA,EAAAA,UAAS,IAA/C,eAAOS,EAAP,KAAoBC,EAApB,KAIMC,GADWC,EAAAA,EAAAA,IAAY,IACJC,SAASC,MAAM,KAAKC,UAAU,GAGjDC,EAAoB,SAACX,GAAD,OAAYA,EAAOS,MAAM,MAE7CG,EAAW,mCAAG,WAAOC,GAAP,oEAClBA,EAAEC,iBACFC,QAAQC,IAAI,wBAAsB,CAChCpB,MAAAA,EACAE,KAAAA,EACAE,OAAQW,EAAkBX,GAC1BE,OAAAA,EACAE,YAAAA,IAGe,aAAbV,EAVc,iCAWVuB,EAAAA,EAAAA,IAAS,CACbrB,MAAAA,EACAE,KAAAA,EACAE,OAAQW,EAAkBX,GAC1BE,OAAAA,EACAE,YAAAA,IAhBc,OAkBhBZ,IAlBgB,yCAqBV0B,EAAAA,EAAAA,IAAIZ,EAAS,CACjBV,MAAAA,EACAE,KAAAA,EACAE,OAAQW,EAAkBX,GAC1BE,OAAAA,EACAE,YAAAA,IA1Bc,QA6BhBX,IA7BgB,4CAAH,sDAiCjB,OACE,gBAAK0B,UAAWC,EAAhB,UACE,kBAAMC,SAAUT,EAAhB,WACE,kBACEU,MAAO1B,EACP2B,SAAU,SAACV,GAAD,OAAOhB,EAASgB,EAAEW,OAAOF,QACnCG,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,YAAY,cACZC,UAAQ,KAGV,kBACEP,MAAOpB,EACPqB,SAAU,SAACV,GAAD,OAAOV,EAAUU,EAAEW,OAAOF,QACpCG,KAAK,OACLC,GAAG,SACHC,KAAK,SACLC,YAAY,SACZC,UAAQ,KAGV,kBACEP,MAAOxB,EACPyB,SAAU,SAACV,GAAD,OAAOd,EAAQc,EAAEW,OAAOF,QAClCG,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,YAAY,OACZC,UAAQ,KAGV,kBACEP,MAAOlB,EACPmB,SAAU,SAACV,GAAD,OAAOR,EAAeQ,EAAEW,OAAOF,QACzCG,KAAK,OACLC,GAAG,cACHC,KAAK,cACLC,YAAY,cACZE,UAAU,MACVD,UAAQ,KAGV,kBACEP,MAAOtB,EACPuB,SAAU,SAACV,GAAD,OAAOZ,EAAUY,EAAEW,OAAOF,QACpCG,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,YAAY,SACZE,UAAU,KACVD,UAAQ,KAGV,kBAAOJ,KAAK,SAASH,MAAM,oB,iEC1GnC,MAA2B,yB,2BCkC1B,MA7BD,SAAkBS,GAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,+BAME,iBAAKd,UAAWC,EAAhB,WACE,yFACA,SAAC7B,EAAA2C,EAAD,CACE1C,iBAnBe,WACrBuB,QAAQC,IAAI,iBACZe,EAAMI,YAAY,CAChBC,SAAS,EACTC,QAAS,iBAEXL,EAAS,MAcHtC,SAAS,oB,4JCbZ,SAAe4C,IAAtB,4CAAO,OAAP,oBAAO,2GAAyBZ,EAAzB,+BAA8B,GAA9B,SAEoBa,MAAM,iDAAD,OAAkDb,IAF3E,cAEGc,EAFH,gBAGeA,EAASC,OAHxB,cAGGC,EAHH,OAIH3B,QAAQC,IAAIwB,EAAUE,GAJnB,kBAMIA,GANJ,mEASA,IAAMC,EAAQ,mCAAG,WAAOjB,GAAP,yFACFa,MAAM,iDAAD,OAAkDb,GAAM,CAC3EkB,OAAQ,SACRC,QAAS,CAAC,eAAiB,sBAHX,cACdC,EADc,gBAMDA,EAAIL,OANH,cAMdM,EANc,yBAObA,GAPa,2CAAH,sDAUR9B,EAAQ,mCAAG,WAAO+B,GAAP,iFACdT,MAAM,gDAAiD,CACzDK,OAAQ,OACRC,QAAS,CAAC,eAAiB,oBAC3BG,KAAMC,KAAKC,UAAUF,KAJL,2CAAH,sDA2BR9B,EAAM,SAACQ,EAAGsB,GAAJ,OACfT,MAAM,GAAD,OAnBQ,gDAmBR,YAAgBb,GAAM,CAC3BkB,OAAQ,MACRC,QAAS,CACL,eAAiB,oBAErBG,KAAMC,KAAKC,UAAUF","sources":["webpack://movies_app_react/./src/components/Input/styles.module.scss?22bd","components/Input/index.jsx","webpack://movies_app_react/./src/pages/AddMovie/styles.module.scss?5bde","pages/AddMovie/index.jsx","utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"styles_Form__YcJeC\"};","import styles from \"./styles.module.scss\";\nimport { useState } from \"react\";\nimport { addMovie, PUT } from \"../../utils\";\nimport { useLocation} from \"react-router-dom\";\n\nexport function Input({ completeCallback, dicoadAddMoviechehofattounaput, callType }) {\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n\n  const location = useLocation('');\n  const movieId = location.pathname.split('/').reverse()[0];\n\n\n  const unStringifyGenres = (genres) => genres.split(\",\");\n\n  const addNewMovie = async (e) => {\n    e.preventDefault();\n    console.log(\"-->>>>POST TUO QUI\", {\n      title,\n      year,\n      genres: unStringifyGenres(genres),\n      poster,\n      description,\n    });\n\n    if (callType === \"addMovie\") {\n      await addMovie({\n        title,\n        year,\n        genres: unStringifyGenres(genres),\n        poster,\n        description,\n      });\n      completeCallback();\n\n    } else {\n      await PUT(movieId, {\n        title,\n        year,\n        genres: unStringifyGenres(genres),\n        poster,\n        description,\n      });\n\n      dicoadAddMoviechehofattounaput();\n    }\n  };\n\n  return (\n    <div className={styles.Form}>\n      <form onSubmit={addNewMovie}>\n        <input\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"titolo film\"\n          required\n        />\n\n        <input\n          value={poster}\n          onChange={(e) => setPoster(e.target.value)}\n          type=\"text\"\n          id=\"poster\"\n          name=\"poster\"\n          placeholder=\"poster\"\n          required\n        />\n\n        <input\n          value={year}\n          onChange={(e) => setYear(e.target.value)}\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          placeholder=\"year\"\n          required\n        />\n\n        <input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"description\"\n          maxLength=\"165\"\n          required\n        />\n\n        <input\n          value={genres}\n          onChange={(e) => setGenres(e.target.value)}\n          type=\"text\"\n          id=\"genre\"\n          name=\"genre\"\n          placeholder=\"genere\"\n          maxLength=\"62\"\n          required\n        />\n\n        <input type=\"submit\" value=\"Conferma\" />\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"AddMovie\":\"styles_AddMovie__1qqoB\",\"Modal\":\"styles_Modal__0sIhQ\"};","import styles from \"./styles.module.scss\";\nimport { Input } from \"../../components/Input\";\n// import { Modal } from \"../../components/Modal\";\n// import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction AddMovie(props) {\n  const navigate = useNavigate();\n\n  const submitComplete = () => {\n    console.log(\"submit andato\");\n    props.editSuccess({\n      visible: true,\n      content: \"Card creata!\",\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      {/* <Modal\n        isVisible={isModalVisible}\n        text=\"Fantastico! Hai aggiunto correttamente un film alla tua lista! Torna alla Home\"\n      /> */}\n\n      <div className={styles.AddMovie}>\n        <h2>Compila tutti i campi per aggiungere un film alla tua lista</h2>\n        <Input\n          completeCallback={submitComplete}\n          callType=\"addMovie\"\n        />\n      </div>\n    </>\n  );\n}\n export default AddMovie","// \"https://edgemony-backend.herokuapp.com/movies\"\n\n// Sulla base della lezione del giorno:\n\n// Creare un file utils.js, all'interno della directory src che:\n\n// includa una funzione per il metodo GET per l'indirizzo https://edgemony-backend.herokuapp.com/movies\n\n// sostituire il fetch al componente <CardList /> con la nuova funzione creata in utils\n\n// includa una funzione per il metodo POST, per l'aggiunta di nuovi movies all'array\n\n// includa una funzione per il metodo DELETE, per la rimozione di un determnato movie\n\n// includa una funzione per il metodo PUT, per modificare un determinato movie\n\nexport async function getMovies(id = \"\") {\n\n    const response = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`)\n    const res = await response.json();\n    console.log(response, res);\n    \n    return res;\n}\n\nexport const delMovie = async (id) => {\n    const del = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`, {\n        method: 'DELETE' , \n        headers: {\"content-type\" : \"application/JSON\"},\n    })\n\n    const data = await del.json();\n    return data;\n}\n\nexport const addMovie = async (body) => {\n    await fetch(\"https://edgemony-backend.herokuapp.com/movies\", {\n        method: 'POST' , \n        headers: {\"content-type\" : \"application/JSON\"},\n        body: JSON.stringify(body)\n        \n    })\n}\n//--------------------\nconst BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\n\n// const GET = () => fetch(BASE_URL).then((res) => res.json);\n\n//POST\n// const POST = (body) => \n//     fetch(BASE_URL, {\n//     method: \"POST\",\n//     headers: {\n//         \"Content-type\" : \"application/json\",\n//     },\n//     body: JSON.stringify(body),\n// });\n\n//PUT\n\nexport const PUT = (id,body) =>\n    fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n        \"Content-type\" : \"application/json\"\n    },\n    body: JSON.stringify(body),\n});\n\n// export { POST, PUT}"],"names":["Input","completeCallback","dicoadAddMoviechehofattounaput","callType","useState","title","setTitle","year","setYear","genres","setGenres","poster","setPoster","description","setDescription","movieId","useLocation","pathname","split","reverse","unStringifyGenres","addNewMovie","e","preventDefault","console","log","addMovie","PUT","className","styles","onSubmit","value","onChange","target","type","id","name","placeholder","required","maxLength","props","navigate","useNavigate","I","editSuccess","visible","content","getMovies","fetch","response","json","res","delMovie","method","headers","del","data","body","JSON","stringify"],"sourceRoot":""}